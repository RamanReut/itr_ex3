{"version":3,"sources":["components/lightTextField/lightTextField.js","components/textFieldWithButton/textFieldWithButton.js","components/labelWithEditButton/labelWithEditButton.js","components/username/username.js","components/roundedBox/roundedBox.js","components/messageBox/messageBox.js","components/messageMenu/messageMenu.js","components/message/message.js","components/messageList/messageList.js","components/messageInput/messageInput.js","services/chat.js","App.js","constants.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","lightTextField","color","palette","secondary","contrastText","LightTextField","value","onChange","styles","TextField","variant","className","size","lightButton","primary","TextFieldWithButton","onButtonClick","buttonText","mainXS","Grid","container","justify","alignItems","spacing","item","xs","Button","onClick","fullWidth","label","typography","h4","icon","LabelWithEditButton","IconButton","ChooseWidget","props","type","console","error","Username","username","AppBar","position","Container","box","borderRadius","RoundedBox","children","Box","classNames","message","paddingBottom","userMessage","backgroundColor","otherMessage","MessageBox","MessageMenu","anchorEl","onClose","onDelete","onEdit","Menu","open","Boolean","MenuItem","converter","showdown","Converter","main","marginBottom","marginTop","textAlign","Component","Item","onMessageEdit","onMessageDelete","useState","setAnchorEl","handleContextMenu","useCallback","event","currentTarget","preventDefault","handleMenuClose","onContextMenu","direction","parser","makeHtml","user","other","MessageList","usernames","userID","messages","scrollParentRef","hasMore","requestLoadMore","loadMore","isReverse","useWindow","getScrollParent","wrap","Object","keys","sort","a","b","map","key","authorID","authorUserID","messageType","text","textArea","height","preview","MessageInput","selectedTab","useSelectedTab","classes","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","minPreviewHeight","maxEditorHeight","minEditorHeight","textAreaProps","autoFocus","socket","__handleNewMessage","__handleNewUser","__handleDeleteMessage","this","socketIO","connect","on","handleNewMessage","bind","handleNewUser","handleDeleteMessage","callback","messageID","authorUsername","id","fetch","then","response","ok","json","offset","count","emit","root","overflow","messageListWrapper","flexGrow","overflowY","overflowX","fullHeight","gridWrapper","boxShadow","shadows","App","setUsername","setMessage","hasMoreMessage","setHasMoreMessage","setMessages","setUsernames","usernameWidgetType","setUsernameWidgetType","setMessageID","setUserID","messageListWrapperRef","useRef","handleSetUserID","cookies","set","expires","applyUsername","current","changeUsername","onEditButtonClick","onUsernameButtonClick","handleMessageEdit","handleMessageDelete","deleteMessage","onNewUser","handleSendMessage","sendMessage","newMessages","onNewMessage","handleLoadMessages","newUsernames","loadMoreMessage","log","requestMessages","length","useEffect","chat","get","requestUserID","subscribeNewUsers","subscribeNewMessage","subscribeDeleteMessage","maxWidth","target","innerRef","ref","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.84c6c5a5.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    lightTextField: {\n        '& input': {\n            color: theme.palette.secondary.contrastText,\n        }\n    },\n}));\n\nexport default function LightTextField({\n    value,\n    onChange,\n}) {\n    const styles = useStyles();\n\n    return (\n        <TextField \n            variant='filled'\n            className={styles.lightTextField}\n            color='secondary'\n            onChange={onChange}\n            value={value}\n            size='medium'\n        />\n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport LightTextField from '../lightTextField/lightTextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    lightButton: {\n        color: theme.palette.primary.contrastText,\n    }\n}));\n\nexport default function TextFieldWithButton({\n    onChange,\n    onButtonClick,\n    value,\n    buttonText,\n    mainXS = 3\n}) {\n    const styles = useStyles();\n\n    return (\n        <Grid \n            container\n            justify='flex-start'\n            alignItems='center'\n            spacing={0}\n        >\n            <Grid item xs={mainXS}>\n                <LightTextField \n                    value={value}\n                    onChange={onChange}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <Button \n                    className={styles.lightButton}\n                    onClick={onButtonClick}\n                    fullWidth\n                >{buttonText}</Button>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        ...theme.typography.h4,\n        color: theme.palette.primary.contrastText,\n    },\n    icon: {\n        color: theme.palette.primary.contrastText,\n    }\n}));\n\nexport default function LabelWithEditButton({\n    value,\n    onButtonClick,\n    mainXS = 3,\n}) {\n    const styles = useStyles();\n\n    return (\n        <Grid \n            container\n            justify='flex-start'\n            alignItems='center'\n            spacing={0}\n        >\n            <Grid\n                container\n                item \n                xs={mainXS}\n                justify='flex-start'\n                alignItems='center'\n            >\n                <div className={styles.label}>{value}</div>\n            </Grid>\n            <Grid item xs={1}>\n                <IconButton \n                    className={styles.icon}\n                    onClick={onButtonClick}\n                >\n                    <EditIcon />\n                </IconButton>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport TextFieldWithButton from '../textFieldWithButton/textFieldWithButton';\nimport LabelWithEditButton from '../labelWithEditButton/labelWithEditButton';\nimport Container from '@material-ui/core/Container';\n\nfunction ChooseWidget(props) {\n    switch (props.type) {\n        default:\n            console.error('Wrong widget type ' + props.type);\n            break;\n        case 'label':\n            return <LabelWithEditButton {...props} />\n        case 'edit':\n            return <TextFieldWithButton {...props} />\n    }\n}\n\nexport default function Username({\n    username,\n    onChange,\n    onButtonClick,\n    type,\n}) {\n    return (\n        <AppBar position='static'>\n            <Container>\n                <ChooseWidget\n                    onChange={onChange}\n                    value={username}\n                    buttonText='apply'\n                    type={type}\n                    onButtonClick={onButtonClick}\n                    mainXS={3}\n                />\n            </Container>\n        </AppBar>\n    )\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n    box: {\n        borderRadius: '5px'\n    }\n})\n\nexport default function RoundedBox({\n    children,\n    className,\n}) {\n    const styles = useStyles();\n\n    return (\n        <Box className={classNames(className, styles.box)}>\n            {children}\n        </Box>\n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport RoundedBox from '../roundedBox/roundedBox';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles({\n    message: {\n        paddingBottom: '0.2em',\n    },\n    userMessage: {\n        backgroundColor: '#e8e8e8',\n    },\n    otherMessage: {\n        backgroundColor: '#b5ceff',\n    }\n});\n\nexport default function MessageBox({\n    children,\n    type,\n\n}) {\n    const styles = useStyles();\n\n    return (\n        <Grid \n            container\n        >\n            <Grid item>\n                <RoundedBox className={classNames(styles[type+'Message'], styles.message)}>\n                    <Container>\n                        {children}\n                    </Container>\n                </RoundedBox>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default function MessageMenu({\n    anchorEl,\n    onClose,\n    onDelete,\n    onEdit,\n}) {\n    return (\n        <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={onClose}\n        >\n            <MenuItem onClick={() => {onEdit();onClose();}}>Edit</MenuItem>\n            <MenuItem onClick={() => {onDelete(); onClose();}}>Delete</MenuItem>\n        </Menu>\n    );\n}","import React, { useState, useCallback } from 'react';\nimport MessageBox from '../messageBox/messageBox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Menu from '../messageMenu/messageMenu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport showdown from 'showdown';\nimport parser from 'html-react-parser';\n\nconst converter = new showdown.Converter();\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        color: theme.palette.primary.main,\n        marginBottom: '0.4em',\n    },\n    message: {\n        '& p': {\n            marginTop: '0.1em',\n            marginBottom: '0.1em',\n            textAlign: 'left',\n        },\n    },\n}));\n\nexport default function Message({\n    type,\n    message,\n    username,\n    onMessageEdit,\n    onMessageDelete,\n}) {\n    const styles = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleContextMenu = useCallback((event) => {\n        if (type === 'user') {\n            setAnchorEl(event.currentTarget);\n        }\n        event.preventDefault();\n    }, [type]);\n    const handleMenuClose = useCallback(() => {\n        setAnchorEl(null);\n    }, []);\n\n    return (\n        <Box onContextMenu={handleContextMenu}>\n            <MessageBox\n                type={type}\n            >\n                <Grid\n                    container\n                    direction='column'\n                    alignItems='flex-start'\n                >\n                    <Grid item>\n                        <div className={styles.label}>{username}</div>\n                    </Grid>\n                    <Grid\n                        item\n                        className={styles.message}\n                    >\n                        <div>{parser(converter.makeHtml(message))}</div>\n                    </Grid>\n                </Grid>\n            </MessageBox>\n            <Menu\n                anchorEl={anchorEl}\n                onDelete={onMessageDelete}\n                onEdit={onMessageEdit}\n                onClose={handleMenuClose}\n            />\n        </Box>\n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Message from '../message/message';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nfunction withGridItem(Component) {\n    return function (props) {\n        const justify = ({ user: 'flex-end', other: 'flex-start' })[props.type];\n\n        return (\n            <Grid\n                item\n                xs={12}\n            >\n                <Grid\n                    container\n                    direction='row'\n                    justify={justify}\n                >\n                    <Grid\n                        item\n                        xs={6}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justify={justify}\n                        >\n                            <Grid item>\n                                <Component {...props} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nconst Item = withGridItem(Message);\n\nexport default function MessageList({\n    usernames,\n    userID,\n    messages,\n    onMessageEdit,\n    onMessageDelete,\n    scrollParentRef,\n    hasMore,\n    requestLoadMore,\n}) {\n    const generateItem = (key) => {\n        const authorID = messages[key].authorUserID\n        const messageType = (userID == authorID) ? 'user' : 'other';\n\n        return <Item\n            key={key}\n            type={messageType}\n            message={messages[key].text}\n            username={usernames[authorID]}\n            onMessageEdit={() => onMessageEdit(key)}\n            onMessageDelete={() => onMessageDelete(key)}\n        />\n    }\n\n    return (\n        <InfiniteScroll\n            loadMore={requestLoadMore}\n            hasMore={hasMore}\n            isReverse={true}\n            useWindow={false}\n            getScrollParent={() => scrollParentRef}\n        >\n            <Grid\n                container\n                spacing={1}\n                direction='column'\n                wrap='nowrap'\n            >\n                {Object.keys(messages).sort((a, b) => a-b).map(generateItem)}\n            </Grid>\n        </InfiniteScroll>\n    )\n}","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport ReactMde from 'react-mde';\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport showdown from 'showdown'\n\nconst converter = new showdown.Converter();\n\nconst useStyles = makeStyles({\n    textArea: {\n        height: '100px',\n    },\n    preview: {\n        height: '100px',\n    },\n});\n\nexport default function MessageInput({\n    message,\n    onClick,\n    onChange,\n}) {\n    var styles = useStyles();\n    var [ selectedTab, useSelectedTab ] = useState('write');\n\n    return (\n        <Grid\n            container\n            alignItems='center'\n        >\n            <Grid item xs={11}>\n                <ReactMde \n                    value={message}\n                    onChange={onChange}\n                    classes={styles}\n                    selectedTab={selectedTab}\n                    onTabChange={useSelectedTab}\n                    generateMarkdownPreview={markdown => {\n                        return Promise.resolve(converter.makeHtml(markdown));\n                    }}\n                    minPreviewHeight={100}\n                    maxEditorHeight={200}\n                    minEditorHeight={100}\n                    textAreaProps={{autoFocus: true}}\n                />\n            </Grid>\n            <Grid item xs>\n                <IconButton\n                    color='primary'\n                    onClick={onClick}\n                >\n                    <SendIcon />\n                </IconButton>\n            </Grid>\n        </Grid>\n    )\n}","import socketIO from 'socket.io-client';\n\nexport default class socket {\n    socket = {};\n    __handleNewMessage = () => {};\n    __handleNewUser = () => {};\n    __handleDeleteMessage = () => {};\n\n    constructor () {\n        this.socket = socketIO.connect('/');\n        this.socket.on('message', this.handleNewMessage.bind(this));\n        this.socket.on('user', this.handleNewUser.bind(this));\n        this.socket.on('delete message', this.handleDeleteMessage.bind(this));\n    }\n\n    subscribeNewMessage(callback = function(messageID, text) {}) {\n        this.__handleNewMessage = callback;\n    }\n\n    subscribeNewUsers(callback = function(userID, username){}) {\n        this.__handleNewUser = callback;\n    }\n\n    subscribeDeleteMessage(callback = function(messageID) {}) {\n        this.__handleDeleteMessage = callback;\n    }\n\n    handleNewMessage({ messageID, authorID, text, authorUsername }) {\n        this.__handleNewMessage(messageID, authorID, text, authorUsername);\n    }\n\n    handleNewUser({ id, username }) {\n        this.__handleNewUser(id, username);\n    }\n\n    handleDeleteMessage({ id }) {\n        this.__handleDeleteMessage(id);\n    }\n\n    requestUserID(callback = function() {}) {\n        fetch('/api/newUserID').then(response => {\n            if(response.ok) {\n                response.json().then(value => {\n                    callback(value.id);\n                })\n            }\n        });\n    }\n\n    requestInitData(callback = function(messages, usernames){}) {\n        fetch('/api/initData').then((response) => {\n            if(response.ok) {\n                response.json().then(value => {\n                    callback(value.messages, value.usernames);\n                })\n            }\n        });\n    }\n\n    requestMessages(offset, count, callback) {\n        fetch(`/api/messages?offset=${offset}&count=${count}`)\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then(\n                        ({ messages, usernames, hasMore }) => {\n                            callback(messages, usernames, hasMore);\n                        });\n                }\n            })\n    }\n\n    sendMessage(userID, messageID, message) {\n        this.socket.emit('message', {\n            userID: userID,\n            messageID: messageID, \n            message: message,\n        });\n    }\n\n    deleteMessage(id, userID) {\n        this.socket.emit('delete message', {\n            messageID: id,\n            userID: userID,\n        });\n    }\n\n    changeUsername(id, username) {\n        this.socket.emit('username', {\n            id: id,\n            username: username,\n        })\n    }\n}","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport Username from './components/username/username';\nimport MessageList from './components/messageList/messageList';\nimport MessageInput from './components/messageInput/messageInput';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport chat from './services/chat';\nimport cookies from 'js-cookie';\nimport { messagesPageSize } from './constants'\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        overflow: 'hidden',\n    },\n    messageListWrapper: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        marginTop: theme.spacing(),\n        marginBottom: theme.spacing()\n    },\n    fullHeight: {\n        height: '100%',\n    },\n    gridWrapper: {\n        boxShadow: theme.shadows[4]\n    },\n\n}));\n\nfunction App() {\n    const styles = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [message, setMessage] = useState('');\n    const [hasMoreMessage, setHasMoreMessage] = useState(false);\n    const [messages, setMessages] = useState([]);\n    const [usernames, setUsernames] = useState({});\n    const [usernameWidgetType, setUsernameWidgetType] = useState('label');\n    const [messageID, setMessageID] = useState('new');\n    const [userID, setUserID] = useState(0);\n    const messageListWrapperRef = useRef();\n    const socket = useRef();\n\n    const handleSetUserID = useCallback((id) => {\n        setUserID(id);\n        cookies.set('userID', id, { expires: 90 });\n    }, [])\n\n    const applyUsername = useCallback(\n        () => {\n            usernames[userID] = username;\n            setUsernameWidgetType('label');\n            socket.current.changeUsername(userID, username);\n        }, [usernames, userID, username]\n    );\n\n    const onEditButtonClick = useCallback(\n        () => {\n            setUsernameWidgetType('edit');\n        }, [setUsernameWidgetType]\n    );\n\n    const onUsernameButtonClick = useCallback(\n        (event) => {\n            if (usernameWidgetType === 'edit') {\n                return applyUsername(event)\n            }\n            return onEditButtonClick(event)\n        }, [applyUsername, onEditButtonClick, usernameWidgetType]\n    );\n\n    const handleMessageEdit = useCallback((id) => {\n        setMessage(messages[id].text);\n        setMessageID(id);\n    }, [messages]);\n\n    const handleMessageDelete = useCallback((id) => {\n        socket.current.deleteMessage(id, userID);\n    }, [userID]);\n\n    const onNewUser = useCallback((id, username) => {\n        setUsernames({ ...usernames, [id]: username });\n    }, [usernames]);\n\n    const handleSendMessage = useCallback(() => {\n        socket.current.sendMessage(userID, messageID, message);\n        setMessage('');\n        setMessageID('new');\n    }, [userID, messageID, message]);\n\n    const onMessageDelete = useCallback((id) => {\n        let {[id]: _, ...newMessages} = messages;\n        setMessages(newMessages);\n    }, [messages]);\n\n    const onNewMessage = useCallback((messageID, authorID, text, username) => {\n        setMessages({ \n            ...messages, \n            [messageID]: {\n                authorUserID: authorID,\n                text: text,\n            }});\n        setUsernames({...usernames, [authorID]: username})\n    }, [messages, usernames]);\n\n    const handleLoadMessages = useCallback(\n        (newMessages, newUsernames, hasMore) => {\n        setMessages({...messages, ...newMessages});\n        setUsernames({...usernames, ...newUsernames});\n        setHasMoreMessage(hasMore);\n    }, [messages, usernames])\n\n    const loadMoreMessage = useCallback(() => {\n        console.log(socket.current);\n        socket.current.requestMessages(\n            (messages.length || 0), \n            messagesPageSize,\n            handleLoadMessages,\n        );\n    }, [handleLoadMessages]);\n\n    useEffect(() => {\n        socket.current = new chat();\n    }, []);\n\n    useEffect(() => {\n        const id = cookies.get('userID');\n        if (!id) {\n            socket.current.requestUserID(handleSetUserID);\n            setUsername('Anonimus');\n        } else {\n            setUserID(id);\n            setUsername(usernames[id]);\n        }\n    }, [handleSetUserID, usernames]);\n\n    useEffect(() => {\n        setUsername(usernames[userID]);\n    }, [usernames, userID]);\n\n    useEffect(() => {\n        loadMoreMessage();\n    }, []);\n\n    useEffect(() => {\n        socket.current.subscribeNewUsers(onNewUser);\n        socket.current.subscribeNewMessage(onNewMessage);\n        socket.current.subscribeDeleteMessage(onMessageDelete);\n    }, [onNewUser, onNewMessage, onMessageDelete]);\n\n    return (\n        <div className={classNames(\"App\", styles.root)}>\n            <Container\n                className={classNames(styles.fullHeight)}\n                maxWidth='md'\n            >\n                <Box className={classNames(styles.fullHeight, styles.gridWrapper)}>\n                    <Grid\n                        container\n                        direction='column'\n                        className={styles.fullHeight}\n                        wrap='nowrap'\n                        spacing={0}\n                    >\n                        <Grid item>\n                            <Username\n                                username={username}\n                                type={usernameWidgetType}\n                                onChange={event => setUsername(event.target.value)}\n                                onButtonClick={onUsernameButtonClick}\n                            />\n                        </Grid>\n                        <Grid\n                            item\n                            className={styles.messageListWrapper}\n                            xs={12}\n                            container\n                            direction='column-reverse'\n                            innerRef={\n                                (ref) => messageListWrapperRef.current=ref\n                            }\n                        >\n                            <Container>\n                                <MessageList\n                                    hasMore={false}\n                                    messages={messages}\n                                    usernames={usernames}\n                                    userID={userID}\n                                    onMessageDelete={handleMessageDelete}\n                                    onMessageEdit={handleMessageEdit}\n                                    scrollParentRef={messageListWrapperRef.current}\n                                    requestLoadMore={loadMoreMessage}\n                                    hasMore={hasMoreMessage}\n                                />\n                            </Container>\n                        </Grid>\n                        <Grid item>\n                            <Container>\n                                <MessageInput\n                                    message={message}\n                                    onChange={setMessage}\n                                    onClick={handleSendMessage}\n                                />\n                            </Container>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;","export const initUsername = 'Anonimus';\nexport const userID = 1;\nexport const usernames = {\n    0: 'test',\n    1: 'user',\n    2: 'anybody',\n}\nexport const messages = [\n    {\n        authorUserID: 0, \n        text: 'hi',\n    }, {\n        authorUserID: 1,\n        text: 'hello',\n    }, {\n        authorUserID: 2,\n        text: 'Who are you?',\n    }, {\n        authorUserID: 0, \n        text: 'hi',\n    }, {\n        authorUserID: 1,\n        text: 'hello',\n    }, {\n        authorUserID: 2,\n        text: 'Who are you?',\n    }, {\n        authorUserID: 0, \n        text: 'hi',\n    }, {\n        authorUserID: 1,\n        text: 'hello',\n    }, {\n        authorUserID: 2,\n        text: 'Who are you?',\n    }, \n]\nexport const messagesPageSize = 5;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}